<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set up game variables and objects for the first time.

// Local variables
var i, str_setup = "setup.json";

// Quick way to enter debug mode - untick the Visible box on obj_parser
if (visible == false) {
    show_debug_overlay(true);
    visible = true;
}

// If debug mode is on, set debug options
if (debug_mode == true) {
    show_debug_overlay(true);
}

// If parameters are passed, activate them
for (i = 0; i &lt; parameter_count(); i++) {
    if (parameter_string(i) == "debug") {
        show_debug_overlay(true);
    }
    if (string_pos("setup=",parameter_string(i)) == 1) {
        str_setup = string_copy(parameter_string(i),7,string_length(parameter_string(i))-6)
    }
}

// Initialise game and start menu action accordingly
scr_setMenuAction(scr_setGame(str_setup));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the "gui" foreground

if (int_guiForeground != -1) {
    draw_background(int_guiForeground,0,0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw backgrounds and description text

// Below everything, draw the background
if ((bool_inventory == true) &amp;&amp; (int_inventoryBackground != -1)) {
    draw_background(int_inventoryBackground,0,0);
}
else if (int_background != -1) {
    draw_background(int_background,0,0);
}

// Above the background, draw the gui background and description text
if (int_guiBackground != -1) {
    draw_background(int_guiBackground,0,0);
}

if (str_description != "") {
    draw_set_color(int_descriptionColor);
    draw_text(int_xDescription, int_yDescription, str_description);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
